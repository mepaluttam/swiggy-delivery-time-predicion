name: CI-CD

on: push

jobs:
  model-deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install pytest

      - name: Install DVC
        uses: iterative/setup-dvc@v1

      - name: Configure DVC remote auth (DagsHub)
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          dvc remote modify origin --local auth basic
          dvc remote modify origin --local user mepaluttam
          dvc remote modify origin --local password $DAGSHUB_TOKEN

      - name: DVC Pull
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: dvc pull

      - name: Test Model Registry
        run: pytest tests/test_model_registry.py

      - name: Test Model Performance
        run: pytest tests/test_model_performance.py

      - name: Promote Model
        if: success()
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          MLFLOW_TRACKING_USERNAME: mepaluttam
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
          MLFLOW_TRACKING_URI: https://dagshub.com/mepaluttam/swiggy-delivery-time-predicion.mlflow
        run: python scripts/promote_model_to_prod.py

      
      - name: Log in to Docker Hub
        if: success()
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        if: success()
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/food_delivery_time_prediction:latest .

      - name: Push Docker Image
        if: success()
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/food_delivery_time_prediction:latest


      - name: Deploy to EC2
        if: success()
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/food_delivery_time_prediction:latest
            docker stop my-app || true
            docker rm my-app || true
            docker run -d -p 80:8000 --name my-app \
             -e DAGSHUB_TOKEN=${{ secrets.DAGSHUB_TOKEN }} \
             ${{ secrets.DOCKER_USERNAME }}/food_delivery_time_prediction:latest





